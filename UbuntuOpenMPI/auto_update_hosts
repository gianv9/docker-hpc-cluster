#!/bin/sh



#######################
# ARGUMENTS PARSER

while [ "$1" != "" ];
do
    PARAM=$(echo "$1" | awk -F= '{print $1}')
    VALUE=$(echo "$1" | awk -F= '{print $2}')

    case $PARAM in
        role)
            [ "$VALUE" ] && ROLE=$VALUE
            ;;
        mpi_master_service_name)
            [ "$VALUE" ] && MPI_MASTER_SERVICE_NAME=$VALUE
            ;;
        mpi_worker_service_name)
            [ "$VALUE" ] && MPI_WORKER_SERVICE_NAME=$VALUE
            ;;
        # openmpi_hostfile)
        #     [ "$VALUE" ] && OPENMPI_HOSTFILE=$VALUE
        #     ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            exit 1
            ;;
    esac
    shift
done

cat > /etc/opt/service_names <<- EOF
MPI_MASTER_SERVICE_NAME=${MPI_MASTER_SERVICE_NAME}
MPI_WORKER_SERVICE_NAME=${MPI_WORKER_SERVICE_NAME}
# OPENMPI_HOSTFILE=${OPENMPI_HOSTFILE}
EOF

case $ROLE in
    master)
      echo 'btl_tcp_if_exclude = lo,eth0,eth2' >> /etc/openmpi/openmpi-mca-params.conf
      echo 'btl=^openib' >> /etc/openmpi/openmpi-mca-params.conf
      echo 'oob_tcp_if_exclude = lo,eth0,eth2' >> /etc/openmpi/openmpi-mca-params.conf
      /usr/sbin/sshd -D &
      hosts=$(find_workers)
      printf "%s\n" $(find_workers) > /etc/openmpi/openmpi-default-hostfile
      while sleep 2
      do
        current_hosts=$(find_workers)
        [ "$hosts" != "$current_hosts" ] && printf "%s\n" "$current_hosts" > /etc/openmpi/openmpi-default-hostfile
        hosts=$current_hosts
      done
    ;;
    worker)
      echo 'btl_tcp_if_exclude = lo,eth1' >> /etc/openmpi/openmpi-mca-params.conf
      echo 'btl=^openib' >> /etc/openmpi/openmpi-mca-params.conf
      echo 'oob_tcp_if_exclude = lo,eth1' >> /etc/openmpi/openmpi-mca-params.conf
      /usr/sbin/sshd -D
    ;;
    *)
      break
    ;;
esac
